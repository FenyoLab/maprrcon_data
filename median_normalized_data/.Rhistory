setwd("~/Google Drive/Boeke_lab/ENCODE_paper/motif")
peaks=read.table('peak.detection.threshold.1_1.3.TF.summary.txt',header=T,stringsAsFactors = F,sep='\t')
cells=read.table('rnaseq_L1_celllines.txt',stringsAsFactors = F)[,-2]
setwd("~/Google Drive/Boeke_lab/ENCODE_paper/RNAseq")
cells=read.table('rnaseq_L1_celllines.txt',stringsAsFactors = F)[,-2]
cells
colnames(cells)=c('A549','GM12878','H1-hESC','HepG2','K562','HeLa-S3','MCF-7','IMR-90','HCT116')
cells
cells=t(cells)
cells
cells=cells[,4]
cells
cells=t(cells[,4])
cells=cbind(cells,rowMeans(cells[,1:3]))
cells=read.table('rnaseq_L1_celllines.txt',stringsAsFactors = F)[,-2]
colnames(cells)=c('A549','GM12878','H1-hESC','HepG2','K562','HeLa-S3','MCF-7','IMR-90','HCT116')
cells=t(cells)
cells=cbind(cells,rowMeans(cells[,1:3]))
cells
cells=read.table('rnaseq_L1_celllines.txt',stringsAsFactors = F)[,-2]
colnames(cells)=c('A549','GM12878','H1-hESC','HepG2','K562','HeLa-S3','MCF-7','IMR-90','HCT116')
cells=t(cells)
#cells=cbind(cells,rowMeans(cells[,1:3]))
cells=cbind(cells,cells[,4])
cells
TF_heatmap<-function(p,c)
{
data=list()
for (i in 1:nrow(cells))
{
tmp=rownames(cells)[i]
tmp2=peaks[which(peaks[,3]==tmp),]
data[[i]]=tmp2
}
alltfs=unique(data[[1]][,2])
for (i in 2:length(data))
{
alltfs=c(alltfs,unique(data[[i]][,2]))
}
alltfs=unique(alltfs)
alldata=matrix(data=NA,nrow=length(alltfs),ncol=nrow(cells))
colnames(alldata)=rownames(cells)
rownames(alldata)=alltfs
for (i in 1:nrow(cells))
{
data_tmp=data[[i]]
for (j in 1:nrow(alldata))
{
if (alltfs[j] %in% data_tmp[,2])
{
alldata[j,i]=mean(data_tmp[which(data_tmp[,2]==alltfs[j]),5])
}
}
}
### take the TFs that have data in at least 4 cell lines
alldata=as.data.frame(alldata)
for (i in 1:nrow(alldata))
{
length(which(is.na(alldata[i,])))->alldata[i,nrow(cells)+1]
}
alldata2=alldata[which(alldata[,nrow(cells)+1]<=5),]
alldata3=alldata2
#change to binary 0 and 1
for (i in 1:nrow(alldata3))
{
for (j in 1:ncol(alldata3))
{
if (is.na(alldata3[i,j])==F)
{
if (alldata3[i,j]>0)
{
alldata3[i,j]=1
}
}
}
}
# plot the binary heatmap
library(gplots)
my_palette <- colorRampPalette(c("pink", "red")) (n=2)
breaks <- seq(min(alldata3, na.rm = T), max(alldata3, na.rm = T), length.out = 3)
hclust.ave <- function(x) hclust(x, method="ward.D2")
heatmap.2(as.matrix(alldata3[,order(cells[,4])]), trace="none", na.color = "grey", scale="none",
col = my_palette, breaks=breaks, Colv = F,dendrogram='row',hclustfun=hclust.ave)
}
setwd("~/Google Drive/Boeke_lab/ENCODE_paper")
TF_heatmap(p=peaks,c=cells)
setwd("/Volumes/My Book for Mac/ENCODE/encode_bam/median_normalized_data")
names=list.files('.')
names2=vector()
for (i in 1:length(names))
{
names2[i]=strsplit(names[i],'-')[[1]][1]
}
files=names[which(names2=='RAD21')]
cells=vector()
for (i in 1:length(files))
{
cells[i]=strsplit(files[i],'_')[[1]][2]
}
head(cells)
cells
setwd("/Volumes/My Book for Mac/ENCODE/encode_bam/median_normalized_data")
names=list.files('.')
names2=vector()
for (i in 1:length(names))
{
names2[i]=strsplit(names[i],'-')[[1]][1]
}
files=names[which(names2=='RAD21' | 'FLAG-RAD21')]
cells=vector()
for (i in 1:length(files))
{
cells[i]=strsplit(files[i],'_')[[1]][2]
}
